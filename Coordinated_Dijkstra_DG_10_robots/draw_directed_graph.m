clear all; close all;
% cmap = [
%     0 0 0; ...
%     1 0 0; ...
%     0 0 1; ...    
%     0 1 0; ...
%     1 1 0; ...
%     1 0.75 0.8;      %机器人1
%     0.86 0.08 0.24;      %机器人2
%     0.5 0 0.5;      %机器人3
%     0.25 0.4 0.86;      %机器人4
%     0.44 0.5 0.56;      %机器人5
%     0 1 1;      %机器人6
%     1 0.84 0;      %机器人7
%     1 0.55 0;      %机器人8
%     0.74 0.56 0.56;      %机器人9
%     0.12 0.56 1];     %机器人10
% colormap(cmap);
cmap = [1 1 1; ...
    0 0 0; ...
    1 0 0; ...
    0 0 1; ...    
    0 1 0; ...
    1 1 0; ...
    0.9 0.9 0.9;  %路径1
    0.8 0.8 0.8;  %路径2
    0.7 0.7 0.7;  %路径3
    0.6 0.6 0.6;  %路径4
    0.5 0.5 0.5;  %路径5
    0.4 0.4 0.4;  %路径6
    0.3 0.3 0.3; %路径7
    0.2 0.2 0.2;  %路径8
    0.1 0.1 0.1;   %路径9
    0.05 0.05 0.05; %路径10
    1 0.75 0.8;      %机器人1
    0.86 0.08 0.24;      %机器人2
    0.5 0 0.5;      %机器人3
    0.25 0.4 0.86;      %机器人4
    0.44 0.5 0.56;      %机器人5
    0 1 1;      %机器人6
    1 0.84 0;      %机器人7
    1 0.55 0;      %机器人8
    0.74 0.56 0.56;      %机器人9
    0.12 0.56 1];     %机器人10
colormap(cmap);

map = false(18);
map(1:3, 1:3) = true;
map(1:4, 4:7) = true;
map(1:4, 9:10) =true;
map(1:18, 15:18) =true;
%map(1:7, 12:14) =true;
map(4:5, 1:2) = true;
map(18, 1:18) = true;
map(16:17, 1:2) = true;
map(16:17, 4:5) = true;
map(16:17, 7:10) = true;
map( 7:8, 12:14) =true;
map( 10:18, 12:14) =true;
map(10, 12) = false;
map(14, 12) = false;
map(7:8, 2:3) = true;
map(10:11, 2:3) = true;
map(13:14, 2:3) = true;
map(7:8, 5:6) = true;
map(10:11,5:6) = true;
map(13:14, 5:6) = true;
map(7:8, 8:9) = true;
map(10:11,8:9) = true;
map(13:14, 8:9) = true;
% image(1.5, 1.5, map);
% grid on;
% axis image;
% disp(map)
weight = zeros(324, 4);
% direction = [0 0 0 0 0 2 2 2 2 2 2 2 2 2 4 0 0 0 ;
%                    0 0 0 0 0 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 4 5 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 4 3 9 9 7 9 9 5 9 9 7 0 0 0 ;
%                    0 0 0 0 4 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 4 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 2 6 2 2 8 2 2 6 2 2 4 0 0 0 ;
%                    0 0 0 0 3 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 3 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 3 3 0 0 4 0 0 3 0 0 4 0 0 0 ;
%                    0 0 0 0 3 5 9 9 9 9 9 5 9 9 9 0 0 0 ;
%                    4 9 9 9 9 5 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    4 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    2 2 2 2 2 3 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;
%                    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ;];
direction = [
     0     0     0     0     0     0     0     0     0     0     0     4     4     2     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     9     0     2     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     9     0     2     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     9     0     2     0     0     0     0;
     0     0     4     4     4     4     2     3     3     3     3     9     0     2     0     0     0     0;
     2     3     5     3     3     3     6     3     3     3     5     5     3     3     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     2     4     4     7     4     4     8     4     4     4     9     0     0     0     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     2     3     3     5     3     3     6     3     3     3     5     0     0     0     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     2     0     0     9     0     0     2     0     0     0     9     0     0     0     0     0     0     0;
     4     4     4     7     4     4     4     4     4     4     9     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0;
     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0     0];%  9 up 2 down 3 left 4 right 5 left up 6 left down 7 right up 8 right down
 a= [0 0 0 0];
for i = 1:324
    switch (direction(i))
        case 0
            a= [0 0 0 0];
        case 9
            a= [1 0 0 0];
        case 2 
            a= [0 1 0 0];
        case 3 
            a= [0 0 1 0];
        case 4
            a= [0 0 0 1];
        case 5
            a= [1 0 1 0];
        case 6 
            a= [0 1 1 0];
        case 7
            a= [1 0 0 1];
        case 8 
            a=[0 1 0 1];
    end
    weight(i, :) = a;
end
start_coords = [6, 7];
dest_coords = [5, 7];
[route, numExpanded] = Copy_of_DijkstraGrid (map, start_coords, dest_coords,weight);

fid = fopen('weight.txt', 'w');
for i = 1:324
    if (rem(i, 18))
        fprintf(fid, '%s%d%s%d%s%d%s%d%s', '{', weight(i, 1), ',', weight(i, 2),',' , weight(i, 3),',' , weight(i, 4), '},  ');
    else
        fprintf(fid, '%s%d%s%d%s%d%s%d%s\n', '{', weight(i, 1), ',', weight(i, 2),',' , weight(i, 3),',' , weight(i, 4), '},  ');
    end
end

fclose(fid);
%disp( weight);
% image(1, 1,direction);
% grid on;
% axis image;
%  disp(weight);
fid_1 = fopen('map.txt', 'w');
for i = 1:18
    fprintf(fid_1, '%s', '{');
    for j = 1:18
        if (direction(i, j))
            obstacle = 0;
        else
            obstacle = 1;
        end
        fprintf(fid_1, '%d%s', obstacle, ',');
    end
    fprintf(fid_1, '%s\n', '},');
end
